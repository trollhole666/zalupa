import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import WebAppInfo
from aiogram.utils import executor

# ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–∫–µ–Ω —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø–æ–º–µ–Ω—è–π –µ–≥–æ –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ BotFather
API_TOKEN = '7926988231:AAGlqZNcBm-q3hd5KHBdHMOn-H5_-xwet5w'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = types.InlineKeyboardMarkup()
    web_app = WebAppInfo(url='https://zalupa-8ki2.onrender.com')  # –∞–¥—Ä–µ—Å —Ç–≤–æ–µ–π –∏–≥—Ä—ã
    keyboard.add(types.InlineKeyboardButton(text="ü™≥ –ò–≥—Ä–∞—Ç—å –≤ –¢–∞—Ä–∞–∫–∞–Ω–æ–≤", web_app=web_app))
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ —Ä–∞–∑–¥–∞–≤–∏—Ç—å —Ç–∞—Ä–∞–∫–∞–Ω–æ–≤?", reply_markup=keyboard)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
